import { useEffect, useState } from "react";
import { Order } from "../../interfaces/Order"; // Import ki·ªÉu d·ªØ li·ªáu Order

function AdminOrders() {
  const [orders, setOrders] = useState<Order[]>([]); // X√°c ƒë·ªãnh ki·ªÉu d·ªØ li·ªáu

  useEffect(() => {
    fetch("http://localhost:3000/orders")
      .then((res) => res.json())
      .then((data: Order[]) => {
        console.log("D·ªØ li·ªáu ƒë∆°n h√†ng:", data); // Debug d·ªØ li·ªáu API
        setOrders(data);
      })
      .catch((error) => console.error("L·ªói khi l·∫•y ƒë∆°n h√†ng:", error));
  }, []);

  const updateOrderStatus = (orderId: number, newStatus: string) => {
    fetch(`http://localhost:3000/orders/${orderId}`, {
      method: "PATCH",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({ status: newStatus }),
    })
      .then((res) => res.json())
      .then((updatedOrder) => {
        setOrders((prevOrders) =>
          prevOrders.map((order) =>
            order.id === updatedOrder.id ? updatedOrder : order
          )
        );
      })
      .catch((error) => console.error("L·ªói khi c·∫≠p nh·∫≠t tr·∫°ng th√°i ƒë∆°n h√†ng:", error));
  };

  return (
    <div>
      <h2>üì¶ Qu·∫£n l√Ω ƒë∆°n h√†ng</h2>
      {orders.length === 0 ? (
        <p>Kh√¥ng c√≥ ƒë∆°n h√†ng n√†o.</p>
      ) : (
        <table className="table">
          <thead>
            <tr>
              <th>ID</th>
              <th>T√™n kh√°ch h√†ng</th>
              <th>S·ªë ƒëi·ªán tho·∫°i</th>
              <th>ƒê·ªãa ch·ªâ</th>
              <th>T·ªïng ti·ªÅn</th>
              <th>Tr·∫°ng th√°i</th>
              <th>Thao t√°c</th>
            </tr>
          </thead>
          <tbody>
            {orders.map((order) => (
              <tr key={order.id}>
                <td>{order.id || "N/A"}</td>
                <td>{order.customer?.name || "N/A"}</td>
                <td>{order.customer?.phone || "N/A"}</td>
                <td>{order.customer?.address || "N/A"}</td>
                <td>{order.total ? order.total.toLocaleString() : "0"} VNƒê</td>
                <td>{order.status || "Ch∆∞a c·∫≠p nh·∫≠t"}</td>
                <td>
                 <select
                    value={order.status}
                    onChange={(e) => updateOrderStatus(order.id, e.target.value)}
                  >
                    <option value="Ch∆∞a x·ª≠ l√Ω">Ch∆∞a x·ª≠ l√Ω</option>
                    <option value="ƒêang x·ª≠ l√Ω">ƒêang x·ª≠ l√Ω</option>
                    <option value="ƒê√£ ho√†n th√†nh">ƒê√£ ho√†n th√†nh</option>
                    <option value="ƒê√£ h·ªßy">ƒê√£ h·ªßy</option>
                  </select>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      )}
    </div>
  );
}

export default AdminOrders;